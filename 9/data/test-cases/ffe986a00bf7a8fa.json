{
  "uid" : "ffe986a00bf7a8fa",
  "name" : "test_cookie_accept",
  "fullName" : "test_conduit.conduit_test.TestCondiutLogin#test_cookie_accept",
  "historyId" : "3e3118eca47f6deeb930685b87513bf2",
  "time" : {
    "start" : 1628418228344,
    "stop" : 1628418228537,
    "duration" : 193
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True == 'Your registration was successful!'",
  "statusTrace" : "self = <conduit_test.TestCondiutLogin object at 0x7ffaa25561c0>\n\n    def test_cookie_accept(self):\n        self.driver.maximize_window()\n        cookie_accept = WebDriverWait(\n            self.driver, 5).until(\n            EC.visibility_of_element_located((By.CLASS_NAME, 'cookie__bar__buttons__button--accept'))\n        )\n        cookie_accept.click()\n        element = WebDriverWait(\n            self.driver, 5).until(\n            EC.invisibility_of_element_located((By.ID, 'cookie-policy-panel'))\n        )\n        print(element)\n>       assert element == 'Your registration was successful!'\nE       AssertionError: assert True == 'Your registration was successful!'\n\ntest_conduit/conduit_test.py:40: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert True == 'Your registration was successful!'",
    "statusTrace" : "self = <conduit_test.TestCondiutLogin object at 0x7ffaa25561c0>\n\n    def test_cookie_accept(self):\n        self.driver.maximize_window()\n        cookie_accept = WebDriverWait(\n            self.driver, 5).until(\n            EC.visibility_of_element_located((By.CLASS_NAME, 'cookie__bar__buttons__button--accept'))\n        )\n        cookie_accept.click()\n        element = WebDriverWait(\n            self.driver, 5).until(\n            EC.invisibility_of_element_located((By.ID, 'cookie-policy-panel'))\n        )\n        print(element)\n>       assert element == 'Your registration was successful!'\nE       AssertionError: assert True == 'Your registration was successful!'\n\ntest_conduit/conduit_test.py:40: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b4af3830fb8ac0a",
      "name" : "log",
      "source" : "b4af3830fb8ac0a.txt",
      "type" : "text/plain",
      "size" : 386
    }, {
      "uid" : "e8d4bfd892637ed0",
      "name" : "stdout",
      "source" : "e8d4bfd892637ed0.txt",
      "type" : "text/plain",
      "size" : 5
    }, {
      "uid" : "c0fcace0d11c2b1a",
      "name" : "stderr",
      "source" : "c0fcace0d11c2b1a.txt",
      "type" : "text/plain",
      "size" : 212
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_conduit"
  }, {
    "name" : "suite",
    "value" : "conduit_test"
  }, {
    "name" : "subSuite",
    "value" : "TestCondiutLogin"
  }, {
    "name" : "host",
    "value" : "R1-Roni-MBP"
  }, {
    "name" : "thread",
    "value" : "34792-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_conduit.conduit_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ffe986a00bf7a8fa.json",
  "parameterValues" : [ ]
}